################################################################################
# Copyright (c) 2021,2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
################################################################################

# BPDM application specific configuration
bpdm:
  # Name of this application (shown in Swagger) (on default set by maven resource filtering)
    name: '@project.name@'
  # Version of this application (shown in Swagger) (on default set by maven resource filtering)
    version: '@project.version@'
  # Description of this application (shown in Swagger) (on default set by maven resource filtering)
    description: '@project.description@'
    bpn:
      # Specify the BPNL of the owner of this Gate here
      # If set, the BPNL will be attached to business partner data a sharing member claim as their own
      # This way the golden record process knows who claims the business partner
      # Additionally, if set and security is enabled all incoming tokens need to have a "BPN" claim with the matching BPNL or otherwise they will not be authorized
        owner-bpn-l:
    api:
      # The maximum amount of business partner entries a sharing member can upsert per request
        upsert-limit: 100
    tasks:
        creation:
            fromSharingMember:
              # When and how often the Gate checks for new business partner data to be shared
              cron: '-'
              # Up to how many golden record tasks can be created when checking
              batchSize: 100
            fromPool:
              # When and how often the Gate checks for golden record updates from the Pool
                cron: '-'
              # Up to how many golden record tasks can be created when checking
                batchSize: 100
        check:
          # When and how often the status of golden record tasks should be checked
            cron: '-'
          # How many golden record tasks can be checked in one request
            batchSize: 100
  # Client connection configuration
    client:
        orchestrator:
          # The base-url of the Orchestrator-API
            base-url: http://localhost:8085
          # Connect to the Orchestrator-API without authenticating on default (use orchestrator-auth profile to activate)
            security-enabled: false
        pool:
          # The base-url of the Pool-API
            base-url: http://localhost:8080
          # Connect to the Pool-API without authenticating on default (use orchestrator-auth profile to activate)
            security-enabled: false
    security:
      # API will not be secured per default
        enabled: false
    datasource:
      # Host name of the used datasource
        host: localhost
      # The database schema to use for this application
        schema: bpdmgate
#
# From here on are framework and dependency configuration
# More information about those properties can be taken from the respective documentation of Spring or the dependency
#
server:
  # Change default port to avoid clash with other BPDM applications
  port: 8081
logging:
    pattern:
      # Use BPDM custom log pattern
        console: "%d{yyyy-MM-dd HH:mm:ss.SSS} %highlight(%-5level) %green([%-10.10X{user:-System}]) %magenta([%-10.10X{request:-No Request}]) %yellow([%-15.15t]) %cyan(%-40.40logger{39}) : %m%n%wEx"
    level:
      # On default show only logs from INFO and above
        root: INFO
        org:
            eclipse:
                tractusx:
                    bpdm:
                      # Logs from this application's package should be DEBUG and above
                        gate: DEBUG
management:
    endpoint:
        health:
            probes:
              # Enable actuator health endpoints for probing
                enabled: true
    health:
        livenessState:
          # Include liveness state in health response (responsive at all)
            enabled: true
        readinessState:
          # Include readiness state in health response (ready to accept traffic)
            enabled: true
spring:
    datasource:
      # We use postgres as datasource
        driverClassName: org.postgresql.Driver
      # No password on default (Change for production)
        password: ''
      # Connect to postgres database over jdbc protocol
        url: jdbc:postgresql://${bpdm.datasource.host}:5432/bpdm
      # Default username for BPDM applications
        username: bpdm
    flyway:
      # Activate flyway for automatic database migration
        enabled: true
      # Apply migrations to this application's default schema
        schemas: ${bpdm.datasource.schema}
    jpa:
      # JPA should speak Postgresql
        database-platform: org.hibernate.dialect.PostgreSQLDialect
        properties:
          # We use hibernate as JPA implementation
            hibernate:
              # Hibernate should assume the default schema of this application on default
              default_schema: ${bpdm.datasource.schema}
              # Send updates and inserts out in batches to decrease network connections to the database
              jdbc:
                batch_size: 16
                order_inserts: true
                order_updates: true
springdoc:
    api-docs:
      # Generate Open-API document
      enabled: true
      # Set custom path for the document
      path: /docs/api-docs
    swagger-ui:
      # Swagger UI should not be available at its default URL (instead on location defined in path)
        disable-swagger-default-url: true
      # Override default Swagger UI location
        path: /ui/swagger-ui
      # Show validation specific information for properties (pattern, minimum, maximum, etc...)
        show-common-extensions: true





